version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cleanarch-postgres
    environment:
      POSTGRES_DB: cleanarch_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: WBn9uqfzyroot
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - cleanarch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cleanarch_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cleanarch-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cleanarch-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    container_name: cleanarch-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=cleanarch_dev;Username=postgres;Password=WBn9uqfzyroot;
      - Redis__ConnectionString=redis:6379
      - JwtSettings__SecretKey=your-super-secret-key-that-is-at-least-256-bits-long-for-security
      - JwtSettings__Issuer=CleanArchTemplate
      - JwtSettings__Audience=CleanArchTemplate
      - JwtSettings__ExpiryMinutes=60
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__MinimumLevel__Override__System=Warning
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cleanarch-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cleanarch-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16